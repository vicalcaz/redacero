copiar los archivos 
firestore-backup y serviceAccountKey en la carpeta del proyecto
ejecutar en el terminal 

node firestore-backup.cjs

empieza a generar los json de las colecciones en la carpeta del proyecto
copiarla a la carpeta backup



GitHub Copilot: Aquí tienes el **paso a paso para exportar tu base de datos Firestore con código (Node.js)** y guardar cada colección como un archivo JSON:

---

### 1. **Instala Node.js y dependencias**

Si no tienes Node.js, descárgalo de [nodejs.org](https://nodejs.org/).

Luego, en una carpeta nueva, ejecuta en la terminal:

```sh
npm init -y
npm install firebase-admin
```

---

### 2. **Descarga tu archivo de credenciales de Firebase**

- Ve a [Firebase Console](https://console.firebase.google.com/).
- Ve a **Configuración del proyecto** > **Cuentas de servicio**.
- Haz clic en **Generar nueva clave privada** y descarga el archivo JSON.
- Guarda el archivo, por ejemplo, como `serviceAccountKey.json` en tu carpeta.

---

### 3. **Crea el script de exportación**

Crea un archivo llamado `firestore-backup.js` con este contenido:

````javascript
// firestore-backup.js
const admin = require('firebase-admin');
const fs = require('fs');

admin.initializeApp({
  credential: admin.credential.cert(require('./serviceAccountKey.json'))
});

const db = admin.firestore();

async function exportCollections() {
  const collections = await db.listCollections();
  for (const col of collections) {
    const snapshot = await col.get();
    const data = snapshot.docs.map(doc => ({
      id: doc.id,
      ...doc.data()
    }));
    fs.writeFileSync(`${col.id}.json`, JSON.stringify(data, null, 2));
    console.log(`Exportada colección: ${col.id} (${data.length} documentos)`);
  }
  console.log('✅ Backup completo.');
}

exportCollections();
````

---

### 4. **Ejecuta el script**

En la terminal, ejecuta:

```sh
node firestore-backup.js
```

Esto creará un archivo `.json` por cada colección en la carpeta, con todos los documentos.

---

### 5. **Verifica los archivos**

Verás archivos como `usuarios.json`, `formularios.json`, etc., cada uno con los datos exportados.

---

**¿Quieres exportar solo una colección específica?**  
Puedo darte el código para eso si lo necesitas.

**¿Quieres importar luego los datos?**  
Avísame y te explico el proceso inverso.

vicalcaz: ReferenceError: require is not defined in ES module scope, you can use import instead        
This file is being treated as an ES module because it has a '.js' file extension and 'C:\Users\Lenovo\Documents\Proyectos\redacero\package.json' contains "type": "module". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.

GitHub Copilot: El error ocurre porque tu proyecto está configurado como **ES module** (`"type": "module"` en package.json), pero el script usa `require`, que solo funciona en CommonJS.

---

## **Soluciones rápidas**

### Opción 1: Renombra el archivo a `.cjs`

Renombra tu archivo a `firestore-backup.cjs` y ejecútalo así:

```sh
node firestore-backup.cjs
```

No necesitas cambiar el código.

---

### Opción 2: Cambia a sintaxis `import` (ES module)

Si prefieres mantener `.js`, cambia el código a usar `import`:

````javascript
import admin from 'firebase-admin';
import fs from 'fs';

import serviceAccount from './serviceAccountKey.json' assert { type: "json" };

admin.initializeApp({
  credential: admin.credential.cert(serviceAccount)
});

const db = admin.firestore();

async function exportCollections() {
  const collections = await db.listCollections();
  for (const col of collections) {
    const snapshot = await col.get();
    const data = snapshot.docs.map(doc => ({
      id: doc.id,
      ...doc.data()
    }));
    fs.writeFileSync(`${col.id}.json`, JSON.stringify(data, null, 2));
    console.log(`Exportada colección: ${col.id} (${data.length} documentos)`);
  }
  console.log('✅ Backup completo.');
}

exportCollections();
````

---

**Resumen:**  
- Renombra a `.cjs` para usar `require` (más fácil).
- O usa `import` si quieres mantener `.js` y ES module.

¿Prefieres la solución CommonJS o ES module?